---
title: "Digital Guard - Apresentação"
author: "data@addressforall.org"
date: today
date-format: "DD/MM/YYYY"
format:
   html:
     self-contained: true
execute:
  echo: false
  warning: false
  error: false
---

```{r}
# open packages
library(readr) #download and open csv
library(tidyverse) #data manipulation
library(lubridate) #dealing with dates

library(sf) #geospatial data support and manipulation

library(leaflet) #interactive maps
library(rbokeh) #interactive plots
library(DT) #interactive tables
library(knitr) #print regular tables

library(rnaturalearth) #downloads one shapefile - this dependency can be removed by downloading data from another directory

# download data
donor <- read_csv("https://raw.githubusercontent.com/digital-guard/preserv-BR/main/data/donor.csv")
donatedPack <- read_csv("https://raw.githubusercontent.com/digital-guard/preserv-BR/main/data/donatedPack.csv")
volume <- read_csv2("https://addressforall.org/luisv2.csv")

# temporary files
iso <- c("ARG", "BRA", "CHL", "COL", "ECU", "PER", "URY", "VEN")
aoi <- ne_countries(return = 'sf') %>% filter(iso_a3 %in% iso)
```

Os endereços são parte fundamental da infraestrutura física-territorial de um país. Eles são essenciais para a provisão de serviços básicos (eletricidade, água, correio), no planejamento e implementação de políticas públicas e no desenvolvimento do setor privado.

O Instituto AddressForAll já atua em `r length(iso)` países da América Latina por meio do Projeto Digital Guard. `r length(unique(volume$donor_id))` parceiros já contribuíram para a plataforma de dados.

```{r}
# mapa da área de atuação
leaflet() %>%
  addTiles() %>%
  addPolygons(data = aoi,
              stroke = 0,
              fillColor = "yellow",
              opacity = 1#,
              #popup = aoi$name#,
              #highlightOptions = highlightOptions(stroke = 1,
              #                                    color = "black",
              #                                    bringToFront = FALSE)
              )

```

## Preservação

`r length(volume$pack_id)` arquivos já foram preservados, organizados em `r length(unique(volume$pack_id))` pacotes de dados.

```{r}
ggplot(data = volume %>% group_by(ftname_class) %>% count() %>% mutate(col = if_else(ftname_class %in% c("geoaddress", "parcel"), TRUE, FALSE))) +
  geom_col(aes(x = n, y = ftname_class, fill = col), show.legend = FALSE) +
  scale_x_continuous(breaks = seq(0,26,2)) +
  scale_y_discrete(limits=rev) +
  scale_fill_manual(values = c("gray75", "gray25")) +
  xlab("Number of files") + ylab("Data type") +
  theme_bw()
```

```{r include = FALSE}
volume %>%
  mutate(new_date = floor_date(accepted_date, unit = "month")) %>%
  group_by(new_date) %>%
  count() %>% 
  ungroup() %>%
  mutate(n = cumsum(n)) %>%
  filter(new_date > "2000-01-01") %>%
  ggplot() +
  geom_area(aes(x = new_date, y = n, fill = "gray50"), show.legend = FALSE) +
  scale_fill_manual(values = c("gray50")) +
  xlab("Date") + ylab("Number of files") +
  theme_bw()
```

## Filtragem

`r volume %>% filter(ftname %in% c("geoaddress_full", "parcel_full")) %>% summarize(sum(quantidade_feicoes_bruta)) %>% sum() %>% format(scientific = FALSE, big.mark = ".")` endereços completos, compartilhados por `r volume %>% filter(ftname %in% c("geoaddress_full", "parcel_full")) %>% group_by(legalname) %>% tally() %>% nrow()` doadores

`r volume %>% filter(ftname %in% c("geoaddress_full", "parcel_full") & license_is_explicit == "yes") %>% summarize(sum(quantidade_feicoes_bruta)) %>% sum() %>% format(scientific = FALSE, big.mark = ".")` endereços completos com licença explícita, compartilhados por `r volume %>% filter(ftname %in% c("geoaddress_full", "parcel_full") & license_is_explicit == "yes") %>% group_by(legalname) %>% tally() %>% nrow()` doadores

```{r}
volume %>%
  filter(ftname %in% c("geoaddress_full", "parcel_full")) %>%
  mutate(`License type` = paste0(if_else(license_is_explicit == "yes", "Explicit - ", "Not explicit - "), `license`)) %>%
  group_by(legalname) %>%
  slice(1) %>%
  ungroup() %>%
  group_by(`License type`) %>%
  summarise(Donors = n(),
            Addresses = format(sum(quantidade_feicoes_bruta, na.rm = TRUE), big.mark = ".")) %>%
  kable()
```

```{r}
#| column: page

volume %>% 
  filter(ftname %in% c("geoaddress_full", "parcel_full")) %>% #shortname != "OSM" & 
  select(legalname, ftname_class, quantidade_feicoes_bruta, license_is_explicit, license) %>%
  mutate(quantidade_feicoes_bruta = format(quantidade_feicoes_bruta, big.mark = ".")) %>%
  setNames(c("Donor name", "Type", "Number of addresses", "License is explicit?", "License type")) %>%
  arrange(`Donor name`) %>%
  datatable(class = 'compact hover nowrap order-column row-border', 
          rownames = FALSE,
          filter = "top")
```

## Consolidação

Ainda não está em operação.
